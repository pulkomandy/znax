	GLOBAL hiscore_RUN

	INCLUDE src/CPC.z80
	INCLUDE keyboard.macros

PIC	INCBIN HISCORES.exo

hiscore_RUN
	; Set palette (fade to red)

	; Display something for game over ?

	; Set palette (fade to black)
; Entry point for calling from menu
	LD DE,0x8080
	LD HL, PIC
	CALL deexo

	CRTC 1, 26
	CRTC 2, 40

	LD BC, 0x7F8D ;mode 1
	OUT (C),C

	; Set palette (do something nice ?)
	LD C, 0
	LD A, 0x4B
	OUT (C),C
	OUT (C),A
	INC C
	LD A,0x54
	OUT (C),C
	OUT (C),A
	INC C
	LD A,0x58
	OUT (C),C
	OUT (C),A
	INC C
	LD A,0x47
	OUT (C),C
	OUT (C),A

	; If coming from game, check if a new highscore was made

	; Display the best scores

	; Set the correct width in the sprite drawing code
	LD HL,52 - 0x4000
	LD (SCRWIDTH),HL

	LD HL,1234;(TEST_SCORE_DATA+4)
	LD DE,buffer
	call Num2Dec
	EX DE,HL
	LD (HL),0xFF

	LD IX,TEST_SCORE_DATA
	LD DE,0x8604 - 13*52
	CALL SPRITES_PRINT_TEXT


	LD IX,TEST_SCORE_DATA
	LD DE,0x8604 - 9*52
	CALL SPRITES_PRINT_TEXT

	LD IX,TEST_SCORE_DATA
	LD DE,0x8604 - 6*52
	CALL SPRITES_PRINT_TEXT

	LD IX,TEST_SCORE_DATA
	LD DE,0x8604 - 3*52
	CALL SPRITES_PRINT_TEXT

	LD IX,TEST_SCORE_DATA
	LD DE,0x8604
	CALL SPRITES_PRINT_TEXT

	; Restore the sprite drawing for other parts of the game
	LD HL,2*48 - 0x4000
	LD (SCRWIDTH),HL

	; Wait for key
	global keyToMenu
keyToMenu
	INIT_KBD nothing, nothing, nothing, nothing, transitionOut, nothing
.wfk
	CALL process_input
	JR .wfk

transitionOut
	; ... continue below...

	; Entry status : all inks set to the same color (white, black, or other)
backToMenu
	CRTC 2,50
	CRTC 7,24
	CRTC 6,13
	CRTC 1,48

	; Mode 1
	LD BC,0x7F8D
	OUT (C),C

	EI

	; Unpack the intro screen at $8000 again (?)
	LD DE,0x8080
	LD HL,INTROSCR
	CALL deexo

	LD E,16
	LD H,40
	EXX
	LD B, 1
	EXX
RASTERLOOP
	SYNC_VBL

	HALT
	HALT
	HALT

	EXX
	LD A,66
	SUB B
	SRA A
	LD C,B
	LD B,A
	CALL delay
	LD B,C
	EXX

	LD B,0x7F
	XOR A
	OUT (C),A
	LD C,0x4B ; White
	OUT (C),C

	; also the border
	OUT (C),E
	OUT (C),C

	INC A
	OUT (C),A
	LD C,0x54 ; Black
	OUT (C),C
	INC A
	OUT (C),A
	LD C,0x41 ; Grey
	OUT (C),C
	INC A
	OUT (C),A
	LD C,0x4F ; Pink
	OUT (C),C

	DEC H
	JP Z,_restart

	EXX
	LD C,B
	CALL delay
	INC C
	LD B,C
	EXX

	LD C,0x4B
.white
	OUT (C),C
	DEC A
	OUT (C),A
	JR NZ, .white
	OUT (C),C
	OUT (C),E
	OUT (C),C

	JR RASTERLOOP

nothing:
	RET

delay
.plop
	LD H,40
.plip
	DEC H
	JR NZ,.plip
	DJNZ .plop

	RET

	;Input: HL = number to convert, DE = location of string
	;Output: 0-9 digits string at (DE)
Num2Dec ld bc,-10000
	call Num1
	ld bc,-1000
	call Num1
	ld bc,-100
	call Num1
	ld c,-10
	call Num1
	ld c,b
Num1 ld a, FONT16_0 ; Normalement c'est -1 mais on va stocker tous les chiffres dÃ©calÃ©s d'un rang, Ã§a nous arrange pour l'affichage. (donc les valeurs stockÃ©es vont en fait de 1 Ã  10)
Num2 inc a
	add hl,bc
	jr c,Num2
	sbc hl,bc
	ld (de),a
	inc de
	ret

TEST_SCORE_DATA
	byte FONT16_P,FONT16_L,FONT16_K,FONT16_ESPACE
;	byte FONT16_P,FONT16_L,FONT16_K,FONT16_ESPACE,FONT16_2,255
;	byte FONT16_P,FONT16_L,FONT16_K,FONT16_ESPACE,FONT16_1,255

buffer
	defs 6

INTROSCR
	incbin ZNXINTRO.exo


